#!/usr/bin/perl -w

package Bench::Base;

sub new { 
    my($class) = shift;
    bless { test => 23 }, $class;
}

package Bench::Direct;
use base qw(Bench::Base);

package Bench::Normal;
use base qw(Class::Accessor);
__PACKAGE__->mk_accessors(qw(test));


package Bench::Fast;
use base qw(Class::Accessor::Fast);
__PACKAGE__->mk_accessors(qw(test));

package Bench::Faster;
use base qw(Class::Accessor::Faster);
__PACKAGE__->mk_accessors(qw(test));

package main;
use strict;
use Benchmark 'cmpthese';

my $tmp;
my $direct = Bench::Direct->new({ test => 23 });
my %accessor = ( Direct => sub { $tmp = $direct->{test}; } );
my %mutator = ( Direct => sub { $direct->{test} = 42; } );
for my $p (qw/Normal Fast Faster/) {
    my $o = "Bench::$p"->new({ test => 23 });
    $accessor{$p} = sub { $tmp = $o->test; };
    $mutator{$p}  = sub { $o->test(42); };
}

print "accessors:\n";
cmpthese( -1, \%accessor );
print "\n";
print "mutators:\n";
cmpthese( -1, \%mutator );

